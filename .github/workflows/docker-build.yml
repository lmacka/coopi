name: Docker Build and Push

on:
  push:
    branches:
      - main

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Get latest version
        id: version
        run: |
          # Get latest tag or default to v0.1.0
          LATEST_TAG=$(git describe --tags --abbrev=0 2>/dev/null || echo "v0.1.0")
          # Increment patch version
          MAJOR=$(echo $LATEST_TAG | cut -d. -f1)
          MINOR=$(echo $LATEST_TAG | cut -d. -f2)
          PATCH=$(echo $LATEST_TAG | cut -d. -f3)
          NEW_PATCH=$((PATCH + 1))
          NEW_TAG="${MAJOR}.${MINOR}.${NEW_PATCH}"
          echo "new_version=$NEW_TAG" >> $GITHUB_OUTPUT
          echo "New version: $NEW_TAG"

      - name: Create Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.version.outputs.new_version }}
          release_name: Release ${{ steps.version.outputs.new_version }}
          draft: false
          prerelease: false

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          platforms: linux/arm/v6,linux/arm/v7
          tags: |
            lmacka/coopi:latest
            lmacka/coopi:${{ steps.version.outputs.new_version }}
            ghcr.io/${{ github.repository_owner }}/coopi:latest
            ghcr.io/${{ github.repository_owner }}/coopi:${{ steps.version.outputs.new_version }}